<?php

/**
 * BaseSlStore
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $name
 * @property string $address
 * @property string $zip
 * @property string $telf
 * @property string $email
 * @property string $latitude
 * @property string $longitude
 * @property integer $position
 * @property integer $world_area_id
 * @property integer $country_id
 * @property integer $city_id
 * @property integer $store_type_id
 * @property integer $store_status_id
 * @property integer $product_line_id
 * @property boolean $online
 * @property SlWorldArea $SlWorldArea
 * @property SlCountry $SlCountry
 * @property SlCity $SlCity
 * @property SlStoreType $SlStoreType
 * @property SlStoreStatus $SlStoreStatus
 * @property Doctrine_Collection $SlExtraData
 * @property Doctrine_Collection $SlProductLines
 * @property Doctrine_Collection $SlStoreTypes
 * @property Doctrine_Collection $SlStoreNews
 * 
 * @method string              getName()            Returns the current record's "name" value
 * @method string              getAddress()         Returns the current record's "address" value
 * @method string              getZip()             Returns the current record's "zip" value
 * @method string              getTelf()            Returns the current record's "telf" value
 * @method string              getEmail()           Returns the current record's "email" value
 * @method string              getLatitude()        Returns the current record's "latitude" value
 * @method string              getLongitude()       Returns the current record's "longitude" value
 * @method integer             getPosition()        Returns the current record's "position" value
 * @method integer             getWorldAreaId()     Returns the current record's "world_area_id" value
 * @method integer             getCountryId()       Returns the current record's "country_id" value
 * @method integer             getCityId()          Returns the current record's "city_id" value
 * @method integer             getStoreTypeId()     Returns the current record's "store_type_id" value
 * @method integer             getStoreStatusId()   Returns the current record's "store_status_id" value
 * @method integer             getProductLineId()   Returns the current record's "product_line_id" value
 * @method boolean             getOnline()          Returns the current record's "online" value
 * @method SlWorldArea         getSlWorldArea()     Returns the current record's "SlWorldArea" value
 * @method SlCountry           getSlCountry()       Returns the current record's "SlCountry" value
 * @method SlCity              getSlCity()          Returns the current record's "SlCity" value
 * @method SlStoreType         getSlStoreType()     Returns the current record's "SlStoreType" value
 * @method SlStoreStatus       getSlStoreStatus()   Returns the current record's "SlStoreStatus" value
 * @method Doctrine_Collection getSlExtraData()     Returns the current record's "SlExtraData" collection
 * @method Doctrine_Collection getSlProductLines()  Returns the current record's "SlProductLines" collection
 * @method Doctrine_Collection getSlStoreTypes()    Returns the current record's "SlStoreTypes" collection
 * @method Doctrine_Collection getSlStoreNews()     Returns the current record's "SlStoreNews" collection
 * @method SlStore             setName()            Sets the current record's "name" value
 * @method SlStore             setAddress()         Sets the current record's "address" value
 * @method SlStore             setZip()             Sets the current record's "zip" value
 * @method SlStore             setTelf()            Sets the current record's "telf" value
 * @method SlStore             setEmail()           Sets the current record's "email" value
 * @method SlStore             setLatitude()        Sets the current record's "latitude" value
 * @method SlStore             setLongitude()       Sets the current record's "longitude" value
 * @method SlStore             setPosition()        Sets the current record's "position" value
 * @method SlStore             setWorldAreaId()     Sets the current record's "world_area_id" value
 * @method SlStore             setCountryId()       Sets the current record's "country_id" value
 * @method SlStore             setCityId()          Sets the current record's "city_id" value
 * @method SlStore             setStoreTypeId()     Sets the current record's "store_type_id" value
 * @method SlStore             setStoreStatusId()   Sets the current record's "store_status_id" value
 * @method SlStore             setProductLineId()   Sets the current record's "product_line_id" value
 * @method SlStore             setOnline()          Sets the current record's "online" value
 * @method SlStore             setSlWorldArea()     Sets the current record's "SlWorldArea" value
 * @method SlStore             setSlCountry()       Sets the current record's "SlCountry" value
 * @method SlStore             setSlCity()          Sets the current record's "SlCity" value
 * @method SlStore             setSlStoreType()     Sets the current record's "SlStoreType" value
 * @method SlStore             setSlStoreStatus()   Sets the current record's "SlStoreStatus" value
 * @method SlStore             setSlExtraData()     Sets the current record's "SlExtraData" collection
 * @method SlStore             setSlProductLines()  Sets the current record's "SlProductLines" collection
 * @method SlStore             setSlStoreTypes()    Sets the current record's "SlStoreTypes" collection
 * @method SlStore             setSlStoreNews()     Sets the current record's "SlStoreNews" collection
 * 
 * @package    collections
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseSlStore extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('sl_store');
        $this->hasColumn('name', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('address', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('zip', 'string', 20, array(
             'type' => 'string',
             'length' => 20,
             ));
        $this->hasColumn('telf', 'string', 20, array(
             'type' => 'string',
             'length' => 20,
             ));
        $this->hasColumn('email', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('latitude', 'string', 10, array(
             'type' => 'string',
             'default' => '0',
             'length' => 10,
             ));
        $this->hasColumn('longitude', 'string', 10, array(
             'type' => 'string',
             'default' => '0',
             'length' => 10,
             ));
        $this->hasColumn('position', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('world_area_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('country_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('city_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('store_type_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('store_status_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('product_line_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('online', 'boolean', null, array(
             'type' => 'boolean',
             'default' => 1,
             ));


        $this->index('name_idx', array(
             'fields' => 
             array(
              0 => 'name',
             ),
             ));
        $this->index('city_idx', array(
             'fields' => 
             array(
              0 => 'city_id',
             ),
             ));
        $this->index('country_idx', array(
             'fields' => 
             array(
              0 => 'country_id',
             ),
             ));
        $this->index('store_type_idx', array(
             'fields' => 
             array(
              0 => 'store_type_id',
             ),
             ));
        $this->index('store_status_idx', array(
             'fields' => 
             array(
              0 => 'store_status_id',
             ),
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('SlWorldArea', array(
             'local' => 'world_area_id',
             'foreign' => 'id'));

        $this->hasOne('SlCountry', array(
             'local' => 'country_id',
             'foreign' => 'id'));

        $this->hasOne('SlCity', array(
             'local' => 'city_id',
             'foreign' => 'id'));

        $this->hasOne('SlStoreType', array(
             'local' => 'store_type_id',
             'foreign' => 'id'));

        $this->hasOne('SlStoreStatus', array(
             'local' => 'store_status_id',
             'foreign' => 'id'));

        $this->hasMany('SlExtraData', array(
             'local' => 'id',
             'foreign' => 'store_id'));

        $this->hasMany('SlProductLine as SlProductLines', array(
             'refClass' => 'SlStoreProductLine',
             'local' => 'sl_store_id',
             'foreign' => 'sl_product_line_id'));

        $this->hasMany('SlStoreType as SlStoreTypes', array(
             'refClass' => 'SlStoreStoreType',
             'local' => 'sl_store_id',
             'foreign' => 'sl_store_type_id'));

        $this->hasMany('SlStoreNews', array(
             'local' => 'id',
             'foreign' => 'store_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $sluggable0 = new Doctrine_Template_Sluggable(array(
             'unique' => true,
             'name' => 'slug',
             'fields' => 
             array(
              0 => 'name',
             ),
             ));
        $this->actAs($timestampable0);
        $this->actAs($sluggable0);
    }
}