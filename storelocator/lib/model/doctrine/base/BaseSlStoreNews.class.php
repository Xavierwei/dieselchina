<?php

/**
 * BaseSlStoreNews
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $store_id
 * @property string $title
 * @property string $paragraph
 * @property SlStore $SlStore
 * 
 * @method integer     getStoreId()   Returns the current record's "store_id" value
 * @method string      getTitle()     Returns the current record's "title" value
 * @method string      getParagraph() Returns the current record's "paragraph" value
 * @method SlStore     getSlStore()   Returns the current record's "SlStore" value
 * @method SlStoreNews setStoreId()   Sets the current record's "store_id" value
 * @method SlStoreNews setTitle()     Sets the current record's "title" value
 * @method SlStoreNews setParagraph() Sets the current record's "paragraph" value
 * @method SlStoreNews setSlStore()   Sets the current record's "SlStore" value
 * 
 * @package    collections
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseSlStoreNews extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('sl_store_news');
        $this->hasColumn('store_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('title', 'string', 1000, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 1000,
             ));
        $this->hasColumn('paragraph', 'string', 4000, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 4000,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('SlStore', array(
             'local' => 'store_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $sluggable0 = new Doctrine_Template_Sluggable(array(
             'unique' => true,
             'name' => 'slug',
             'fields' => 
             array(
              0 => 'title',
             ),
             ));
        $this->actAs($timestampable0);
        $this->actAs($sluggable0);
    }
}